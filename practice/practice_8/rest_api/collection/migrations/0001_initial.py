# Generated by Django 3.1.3 on 2020-11-21 20:57

import collection.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', collection.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OnlineMeeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, max_length=10, verbose_name='date')),
                ('start_time', models.TimeField(db_index=True, max_length=5, verbose_name='start_time')),
                ('end_time', models.TimeField(db_index=True, max_length=5, verbose_name='end_time')),
                ('meeting_url', models.URLField(db_index=True, verbose_name='meeting_url')),
                ('owner_first_name', models.CharField(db_index=True, default='', max_length=50, verbose_name='Owner First Name')),
                ('owner_last_name', models.CharField(db_index=True, default='', max_length=50, verbose_name='Owner Last Name')),
                ('participant_first_name', models.CharField(db_index=True, default='', max_length=50, verbose_name='Participant First Name')),
                ('participant_last_name', models.CharField(db_index=True, default='', max_length=50, verbose_name='Participant Last Name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
